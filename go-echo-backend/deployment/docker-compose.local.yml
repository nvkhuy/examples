version: '3.8'

services:
  redis:
    container_name: ${APP_NAME?APP_NAME is required}-redis
    hostname: ${APP_NAME?APP_NAME is required}-redis
    restart: unless-stopped
    image: redis:6.2-alpine
    ports:
      - 16379:6379
    command: redis-server --save 20 1 --loglevel warning
      
  pgadmin:
    image: dpage/pgadmin4
    restart: on-failure
    container_name: ${APP_NAME?APP_NAME is required}-pgadmin
    ports:
      - 180:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL?PGADMIN_DEFAULT_EMAIL is required}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD?PGADMIN_DEFAULT_PASSWORD is required}

  postgres:
    image: postgres:14-alpine
    restart: on-failure
    container_name: ${APP_NAME?APP_NAME is required}-postgres
    ports:
      - 15432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER?DB_USER is required}']
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      POSTGRES_USER: ${DB_USER?DB_USER is required}
      POSTGRES_PASSWORD: ${DB_PASSWORD?DB_PASSWORD is required}
      POSTGRES_DB: ${DB_NAME?DB_NAME is required}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./scripts/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh